---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apiserviceexports.kube-bind.io
spec:
  group: kube-bind.io
  names:
    categories:
    - kube-bindings
    kind: APIServiceExport
    listKind: APIServiceExportList
    plural: apiserviceexports
    singular: apiserviceexport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: APIServiceExport specifies an API service to be exported to a
          consumer cluster. The consumer cluster is defined by the ClusterBinding
          singleton in the same namespace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec represents the data in the newly created service binding
              export.
            properties:
              resources:
                description: resources are the resources to be bound into the consumer
                  cluster.
                items:
                  properties:
                    group:
                      default: ""
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an service binding export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                  required:
                  - resource
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - group
                - resource
                x-kubernetes-list-type: map
              scope:
                description: "scope is the scope of the APIServiceExport. It can be
                  either Cluster or Namespace. \n Cluster:    The konnector has permission
                  to watch all namespaces at once and cluster-scoped resources. This
                  is more efficient than watching each namespace individually. Namespaced:
                  The konnector has permission to watch only single namespaces. This
                  is more resource intensive. And it means cluster-scoped resources
                  cannot be exported."
                enum:
                - Cluster
                - Namespaced
                type: string
            required:
            - scope
            type: object
          status:
            description: status contains reconciliation information for the service
              binding export.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIServiceExport.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
