---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: serviceexports.kube-bind.io
spec:
  group: kube-bind.io
  names:
    kind: ServiceExport
    listKind: ServiceExportList
    plural: serviceexports
    singular: serviceexport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceExport specifies an API service to exported to a consumer
          cluster. The consumer cluster is defined by the ClusterBinding singleton
          in the same namespace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec represents the data in the newly created service binding
              export.
            properties:
              permissionClaims:
                description: "permissionClaims make resources available in the ServiceExport
                  virtual workspace that are not part of the actual APIExport resources.
                  \n PermissionClaims are optional and should be the least access
                  necessary to complete the functions that the service provider needs.
                  Access is asked for on a GroupResource + identity basis. \n PermissionClaims
                  must be accepted by the user's explicit acknowledgement. Hence,
                  when claims change, the respecting objects are not visible immediately.
                  \n PermissionClaims overlapping with the ServiceExport resources
                  are ignored."
                items:
                  description: PermissionClaim identifies an object by GR and identity
                    hash. Its purpose is to determine the added permissions that a
                    service provider may request and that a consumer may accept and
                    allow the service provider access to.
                  properties:
                    group:
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    identityHash:
                      description: identityHash is the identity for a given ServiceExport
                        that the APIResourceSchema belongs to. The hash can be found
                        on ServiceExport and APIResourceSchema's status. It will be
                        empty for core types. Note that one must look this up for
                        a particular KCP instance.
                      type: string
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an service binding export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                  required:
                  - resource
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            type: object
          status:
            description: status contains reconciliation information for the service
              binding export.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  ServiceExport.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
