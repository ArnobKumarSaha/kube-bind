/*
Copyright The Kube Bind Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"

	v1alpha1 "github.com/kube-bind/kube-bind/pkg/apis/kubebind/v1alpha1"
)

// APIServiceBindingRequestLister helps list APIServiceBindingRequests.
// All objects returned here must be treated as read-only.
type APIServiceBindingRequestLister interface {
	// List lists all APIServiceBindingRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.APIServiceBindingRequest, err error)
	// APIServiceBindingRequests returns an object that can list and get APIServiceBindingRequests.
	APIServiceBindingRequests(namespace string) APIServiceBindingRequestNamespaceLister
	APIServiceBindingRequestListerExpansion
}

// aPIServiceBindingRequestLister implements the APIServiceBindingRequestLister interface.
type aPIServiceBindingRequestLister struct {
	indexer cache.Indexer
}

// NewAPIServiceBindingRequestLister returns a new APIServiceBindingRequestLister.
func NewAPIServiceBindingRequestLister(indexer cache.Indexer) APIServiceBindingRequestLister {
	return &aPIServiceBindingRequestLister{indexer: indexer}
}

// List lists all APIServiceBindingRequests in the indexer.
func (s *aPIServiceBindingRequestLister) List(selector labels.Selector) (ret []*v1alpha1.APIServiceBindingRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.APIServiceBindingRequest))
	})
	return ret, err
}

// APIServiceBindingRequests returns an object that can list and get APIServiceBindingRequests.
func (s *aPIServiceBindingRequestLister) APIServiceBindingRequests(namespace string) APIServiceBindingRequestNamespaceLister {
	return aPIServiceBindingRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// APIServiceBindingRequestNamespaceLister helps list and get APIServiceBindingRequests.
// All objects returned here must be treated as read-only.
type APIServiceBindingRequestNamespaceLister interface {
	// List lists all APIServiceBindingRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.APIServiceBindingRequest, err error)
	// Get retrieves the APIServiceBindingRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.APIServiceBindingRequest, error)
	APIServiceBindingRequestNamespaceListerExpansion
}

// aPIServiceBindingRequestNamespaceLister implements the APIServiceBindingRequestNamespaceLister
// interface.
type aPIServiceBindingRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all APIServiceBindingRequests in the indexer for a given namespace.
func (s aPIServiceBindingRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.APIServiceBindingRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.APIServiceBindingRequest))
	})
	return ret, err
}

// Get retrieves the APIServiceBindingRequest from the indexer for a given namespace and name.
func (s aPIServiceBindingRequestNamespaceLister) Get(name string) (*v1alpha1.APIServiceBindingRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apiservicebindingrequest"), name)
	}
	return obj.(*v1alpha1.APIServiceBindingRequest), nil
}
